// Code generated by goctl. DO NOT EDIT.
package handler

import (
	"net/http"

	comment "HawkBlog/internal/handler/comment"
	"HawkBlog/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/article",
				Handler: comment.CreateCommentHandler(serverCtx),
			},
			{
				Method:  http.MethodDelete,
				Path:    "/article",
				Handler: comment.DeleteCommentHandler(serverCtx),
			},
			{
				Method:  http.MethodPut,
				Path:    "/article",
				Handler: comment.UpdateCommentHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/article",
				Handler: comment.GetCommentHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/article/like",
				Handler: comment.PostCommentLikeHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/articletoc",
				Handler: comment.CommentToCommentHandler(serverCtx),
			},
			{
				Method:  http.MethodPut,
				Path:    "/articletoc",
				Handler: comment.UpdateCommenttocHandler(serverCtx),
			},
			{
				Method:  http.MethodDelete,
				Path:    "/articletoc",
				Handler: comment.DeleteCommenttocHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/articletoc",
				Handler: comment.GetCommenttocHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/articletoc/like",
				Handler: comment.PostCommenttocLikeHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/count",
				Handler: comment.GetCommentCountHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.Auth.AccessSecret),
		rest.WithPrefix("/comment"),
	)
}
